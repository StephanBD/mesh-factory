.col {
  @include breakpointMaker() {
    //-------------------symmetric----------------------------------//
    @each $key, $value in $numbers {
      &-#{$key} {
        // &.flex > * {
        //   -ms-flex: 0 0 100% / $key;
        //   flex: 0 0 100% / $key;
        //   max-width: 100% / $key;
        // }
        &.columns {
          // -webkit-columns: $key;
          column-count: $key;
        }
        &.grid {
          grid-template-columns: repeat($key, 1fr);
        }
      }
    }
    //-------------------asymmetric----------------------------------//

    @for $num1 from 1 through 7 {
      //  2 columns
      @for $num2 from 1 through 7 {
        @if $num1 != $num2 {
          &-#{$num1}-#{$num2} {
            grid-template-columns: #{$num1}fr #{$num2}fr;
          }
        }
      }
    }
    //-------------------symmetric----------------------------------//

    @for $i from 1 through 10 {
      &-1-#{$i*10}-1 {
        grid-template-columns: 1fr fit-content($i * 10%) 1fr;
      }

      &-#{$i*10}-1 {
        grid-template-columns: fit-content($i * 10%) 1fr;
      }
      &-1-#{$i*10} {
        grid-template-columns: 1fr fit-content($i * 10%);
      }
    }
  }
}

.gap {
  @include breakpointMaker {
    @for $i from 0 through 10 {
      $value: $i * 4px;

      &-#{$i} {
        // --gap: #{$value};
        --gap-row: #{$value};
        --gap-col: #{$value};
      }
      //   &-#{$i}.columns,
      //   &-#{$i}.grid,
      //   &-#{$i}.grid-row {
      //     gap: $value;
      //     column-gap: $value;
      //   }
      &-row-#{$i} {
        --gap-row: #{$value};
      }
      &-col-#{$i} {
        --gap-col: #{$value};
      }
    }
  }
}

// grid-template-columns

// grid-template-columns: none;

//     <track-list> values
// grid-template-columns: 100px 1fr;
// grid-template-columns: [linename] 100px;
// grid-template-columns: [linename1] 100px [linename2 linename3];
// grid-template-columns: minmax(100px, 1fr);
// grid-template-columns: fit-content(40%);
// grid-template-columns: repeat(3, 200px);

//     <auto-track-list> values
// grid-template-columns: 200px repeat(auto-fill, 100px) 300px;
// grid-template-columns: minmax(100px, max-content)
//                        repeat(auto-fill, 200px) 20%;
// grid-template-columns: [linename1] 100px [linename2]
//                        repeat(auto-fit, [linename3 linename4] 300px)
//                        100px;
// grid-template-columns: [linename1 linename2] 100px
//                        repeat(auto-fit, [linename1] 300px) [linename3];

//     Global values
// grid-template-columns: inherit;
// grid-template-columns: initial;
// grid-template-columns: unset;
